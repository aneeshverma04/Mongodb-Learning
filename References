TERMINOLOGY
==============================================================================

RDBMS				MongoDB
Database			Database
Table				Collection
Tuple/Row			Document
column				Field
Table Join	   		Embedded Documents
Primary Key			Primary Key (Default key _id provided by mongodb itself)

Database Server and Client
Mysqld/Oracle		mongod
mysql/sqlplus		mongo


CREATING COLLECTION
===============================================================================
--------------------------------------------------------------------------------

Parameter		Type			Description

Name			String			Name of the collection to be created
Options			Document		(Optional) Specify options about memory size and indexing

--------------------------------------------------------------------------------
Field			Type						Description

capped			Boolean	(Optional) 			If true, enables a capped collection. Capped 
											collection is a fixed size collection that automatically overwrites its oldest entries when it reaches its maximum size. If you specify true, you need to specify size parameter also.
autoIndexId		Boolean	(Optional) 			If true, automatically create index on _id 
											fields. Default value is false.
size			number	(Optional) 			Specifies a maximum size in bytes for a capped 												collection. If capped is true, then you need to 											specify this field also.
max				number	(Optional) 			Specifies the maximum number of documents allowed 
											in the capped collection.

-------------------------------------------------------------------------------------------

SOME DATATYPES
============================================================================================

String − This is the most commonly used datatype to store the data. String in MongoDB must be UTF-8 valid.

Integer − This type is used to store a numerical value. Integer can be 32 bit or 64 bit depending upon your server.

Boolean − This type is used to store a boolean (true/ false) value.

Double − This type is used to store floating point values.

Min/ Max keys − This type is used to compare a value against the lowest and highest BSON elements.

Arrays − This type is used to store arrays or list or multiple values into one key.

Timestamp − ctimestamp. This can be handy for recording when a document has been modified or added.

Object − This datatype is used for embedded documents.

Null − This type is used to store a Null value.

Symbol − This datatype is used identically to a string; however, it's generally reserved for languages that use a specific symbol type.

Date − This datatype is used to store the current date or time in UNIX time format. You can specify your own date time by creating object of Date and passing day, month, year into it.

Object ID − This datatype is used to store the document’s ID.

Binary data − This datatype is used to store binary data.

Code − This datatype is used to store JavaScript code into the document.

Regular expression − This datatype is used to store regular expression.

----------------------------------------------------------------------------------------------
RDBMS Where Clause Equivalents in MongoDB
==================================================================================

Equality	{<key>:<value>}				db.mycol.find({"by":"tutorials point"}).pretty()	
												where by = 'tutorials point'
Less Than	{<key>:{$lt:<value>}}		db.mycol.find({"likes":{$lt:50}}).pretty()	
												where likes < 50
Less Than Equals {<key>:{$lte:<value>}}	db.mycol.find({"likes":{$lte:50}}).pretty()	
												where likes <= 50
Greater Than	{<key>:{$gt:<value>}}	db.mycol.find({"likes":{$gt:50}}).pretty()	
												where likes > 50
Greater Than Equals	{<key>:{$gte:<value>}}	db.mycol.find({"likes":{$gte:50}}).pretty()	
												where likes >= 50
Not Equals	{<key>:{$ne:<value>}}		db.mycol.find({"likes":{$ne:50}}).pretty()	
												where likes != 50